{"version":3,"sources":["App.js","index.js"],"names":["App","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","backColor","setbackColor","questionData","setQuestionData","useEffect","axios","get","then","data","className","length","questionText","answerOptions","map","answerOption","i","style","backgroundColor","color","onClick","isCorrect","handleAnswerOptionClick","answerText","nextQuestion","moveNextQuestion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAGe,SAASA,IAAO,IAAD,EAEkBC,mBAAS,GAF3B,mBAErBC,EAFqB,KAEJC,EAFI,OAGMF,oBAAS,GAHf,mBAGrBG,EAHqB,KAGVC,EAHU,OAIFJ,mBAAS,GAJP,mBAIrBK,EAJqB,KAIdC,EAJc,OAKMN,mBAAS,MALf,mBAKrBO,EALqB,KAKVC,EALU,OAMYR,mBAAS,IANrB,mBAMrBS,EANqB,KAMPC,EANO,KA+B5B,OANAC,qBAAU,WACRC,IAAMC,IAAI,0EAA0EC,MAAK,SAAUC,GACjGL,EAAgBK,EAAKA,WAEtB,IAGD,qBAAKC,UAAU,MAAf,SACGb,EACC,qBAAKa,UAAU,UAAf,SACE,8BACE,oBAAGA,UAAU,aAAb,wBAAsCX,EAAtC,WAAqDI,EAAaQ,cAIpE,qBAAKD,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,SACE,2CAAa,sBAAMA,UAAU,OAAhB,4BAEf,qBAAKA,UAAU,aAAf,SACE,sBAAMA,UAAU,OAAhB,wBAIJ,sBAAKA,UAAU,YAAf,UACE,+BAAI,uBAAMA,UAAU,YAAhB,sBAAsCf,EAAkB,KAA5D,IAAuEQ,EAAaQ,OAAO,uBAEzF,sBAAMD,UAAU,gBAAhB,SAAiCP,EAAaQ,OAASR,EAAaR,GAAiBiB,aAAe,QAEtG,qBAAKF,UAAU,eAAf,SACGP,EAAaQ,OAASR,EAAaR,GAAiBkB,cAAcC,KAAI,SAACC,EAAcC,GAAf,OACrE,wBAAQC,MAAO,CAAEC,gBAAiBjB,IAAce,EAAI,UAAY,GAAIG,MAAOlB,IAAce,EAAI,OAAS,IAAMN,UAAU,SAASU,QAAS,kBAlD1H,SAACC,EAAWL,GACtCK,GACFrB,EAASD,EAAQ,GAEnBG,EAAac,GA8CiJM,CAAwBP,EAAaM,UAAWL,IAA9L,SAAmMD,EAAaQ,gBAC7M,OAEP,wBAAQb,UAAU,WAAWU,QAAS,kBA9C3B,WACvB,IAAMI,EAAe7B,EAAkB,EACnC6B,EAAerB,EAAaQ,QAC9Bf,EAAmB4B,GACnBtB,EAAa,OAEbJ,GAAa,GAwCyC2B,IAA5C,qCC3DhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnC,EAAD,MAEFoC,SAASC,eAAe,W","file":"static/js/main.6666adbd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function App() {\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [backColor, setbackColor] = useState(null);\n  const [questionData, setQuestionData] = useState([]);\n\n  const handleAnswerOptionClick = (isCorrect, i) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    setbackColor(i);\n  };\n\n  const moveNextQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questionData.length) {\n      setCurrentQuestion(nextQuestion);\n      setbackColor(null);\n    } else {\n      setShowScore(true);\n    }\n  }\n\n  useEffect(() => {\n    axios.get('https://e619b48d-d6c4-4a41-b538-7c52d533c7f5.mock.pstmn.io/server-demo').then(function (data) {\n      setQuestionData(data.data)\n    })\n  }, []);\n\n  return (\n    <div className='app'>\n      {showScore ? (\n        <div className='wrapper'>\n          <div>\n            <p className='userpoints'>You scored {score} out of {questionData.length}</p>\n          </div>\n        </div>\n      ) : (\n          <div className='wrapper'>\n            <div className='quiz'>\n              <div className='quiz_header'>\n                <div className='quiz_user'>\n                  <h4>Welcome! <span className='name'>user_name</span></h4>\n                </div>\n                <div className='quiz_timer'>\n                  <span className='time'>00:00</span>\n                </div>\n              </div>\n\n              <div className='quiz_body'>\n                <h2><span className='questions'>Question {currentQuestion + 1}</span>/{questionData.length}<br></br>\n                  {/* <span className='question-text'>{questions[currentQuestion].questionText}</span> */}\n                  <span className='question-text'>{questionData.length ? questionData[currentQuestion].questionText : ''}</span>\n                </h2>\n                <div className='option_group'>\n                  {questionData.length ? questionData[currentQuestion].answerOptions.map((answerOption, i) => (\n                    <button style={{ backgroundColor: backColor === i ? '#341f97' : '', color: backColor === i ? '#fff' : '' }} className='option' onClick={() => handleAnswerOptionClick(answerOption.isCorrect, i)}>{answerOption.answerText}</button>\n                  )) : null}\n                </div>\n                <button className=\"btn-next\" onClick={() => moveNextQuestion()}>Next Question</button>\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}