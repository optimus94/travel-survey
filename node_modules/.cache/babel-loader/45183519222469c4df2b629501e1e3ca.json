{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport default function App() {\n  _s();\n\n  const questions = [{\n    questionText: 'When traveling, what type of restaurants do you like the best?',\n    answerOptions: [{\n      answerText: 'Have preparations done right from the start',\n      isPoint: '10'\n    }, {\n      answerText: 'Have snacks carried along with you',\n      isPoint: '4'\n    }, {\n      answerOptions: \"Have your food cooked by your own hands\",\n      isPoint: '7'\n    }]\n  }, {\n    questionText: 'How do you decide on your next travel destination?',\n    answerOptions: [{\n      answerText: 'Visit multiple websites and watch videos to know about the place',\n      isPoint: '10'\n    }, {\n      answerText: 'Know about the place from your friends and family',\n      isPoint: '4'\n    }, {\n      answerOptions: \"ry to pick a place as remote and close-to-nature as possible\",\n      isPoint: '5'\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {}\n  };\n}\n\n_s(App, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/exa00071/Documents/reehen.mehta/React/quiz-app/src/App.js"],"names":["React","useState","App","questions","questionText","answerOptions","answerText","isPoint","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","isCorrect","nextQuestion","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,SAAS,GAAG,CAChB;AACEC,IAAAA,YAAY,EAAE,gEADhB;AAEEC,IAAAA,aAAa,EAAE,CACb;AAAEC,MAAAA,UAAU,EAAE,6CAAd;AAA6DC,MAAAA,OAAO,EAAE;AAAtE,KADa,EAEb;AAAED,MAAAA,UAAU,EAAE,oCAAd;AAAoDC,MAAAA,OAAO,EAAE;AAA7D,KAFa,EAGb;AAAEF,MAAAA,aAAa,EAAE,yCAAjB;AAA4DE,MAAAA,OAAO,EAAE;AAArE,KAHa;AAFjB,GADgB,EAShB;AACEH,IAAAA,YAAY,EAAE,oDADhB;AAEEC,IAAAA,aAAa,EAAE,CACb;AAAEC,MAAAA,UAAU,EAAE,kEAAd;AAAkFC,MAAAA,OAAO,EAAE;AAA3F,KADa,EAEb;AAAED,MAAAA,UAAU,EAAE,mDAAd;AAAmEC,MAAAA,OAAO,EAAE;AAA5E,KAFa,EAGb;AAAEF,MAAAA,aAAa,EAAE,8DAAjB;AAAiFE,MAAAA,OAAO,EAAE;AAA1F,KAHa;AAFjB,GATgB,CAAlB;AAmBA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMa,uBAAuB,GAAIC,SAAD,IAAe;AAC7C,QAAIA,SAAJ,EAAe;AACbF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,UAAMI,YAAY,GAAGR,eAAe,GAAG,CAAvC;;AACA,QAAIQ,YAAY,GAAGb,SAAS,CAACc,MAA7B,EAAqC,CAEpC;AACF,GATD;AAUD;;GAlCuBf,G;;KAAAA,G","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n  const questions = [\n    {\n      questionText: 'When traveling, what type of restaurants do you like the best?',\n      answerOptions: [\n        { answerText: 'Have preparations done right from the start', isPoint: '10' },\n        { answerText: 'Have snacks carried along with you', isPoint: '4' },\n        { answerOptions: \"Have your food cooked by your own hands\", isPoint: '7' }\n      ]\n    },\n    {\n      questionText: 'How do you decide on your next travel destination?',\n      answerOptions: [\n        { answerText: 'Visit multiple websites and watch videos to know about the place', isPoint: '10' },\n        { answerText: 'Know about the place from your friends and family', isPoint: '4' },\n        { answerOptions: \"ry to pick a place as remote and close-to-nature as possible\", isPoint: '5' }\n      ],\n    },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}