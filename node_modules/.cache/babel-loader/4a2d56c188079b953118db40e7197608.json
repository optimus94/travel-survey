{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/exa00071/Documents/reehen.mehta/React/quiz-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport default function App() {\n  _s();\n\n  const questions = [{\n    questionText: 'When traveling, what type of restaurants do you like the best?',\n    answerOptions: [{\n      answerText: 'Have preparations done right from the start',\n      isPoint: '10'\n    }, {\n      answerText: 'Have snacks carried along with you',\n      isPoint: '4'\n    }, {\n      answerOptions: \"Have your food cooked by your own hands\",\n      isPoint: '7'\n    }]\n  }, {\n    questionText: 'How do you decide on your next travel destination?',\n    answerOptions: [{\n      answerText: 'Visit multiple websites and watch videos to know about the place',\n      isPoint: '10'\n    }, {\n      answerText: 'Know about the place from your friends and family',\n      isPoint: '4'\n    }, {\n      answerOptions: \"ry to pick a place as remote and close-to-nature as possible\",\n      isPoint: '5'\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestion].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: questions[currentQuestion].answerOptions.map(answerOptions => {})\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/exa00071/Documents/reehen.mehta/React/quiz-app/src/App.js"],"names":["React","useState","App","questions","questionText","answerOptions","answerText","isPoint","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","isCorrect","nextQuestion","length","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,SAAS,GAAG,CAChB;AACEC,IAAAA,YAAY,EAAE,gEADhB;AAEEC,IAAAA,aAAa,EAAE,CACb;AAAEC,MAAAA,UAAU,EAAE,6CAAd;AAA6DC,MAAAA,OAAO,EAAE;AAAtE,KADa,EAEb;AAAED,MAAAA,UAAU,EAAE,oCAAd;AAAoDC,MAAAA,OAAO,EAAE;AAA7D,KAFa,EAGb;AAAEF,MAAAA,aAAa,EAAE,yCAAjB;AAA4DE,MAAAA,OAAO,EAAE;AAArE,KAHa;AAFjB,GADgB,EAShB;AACEH,IAAAA,YAAY,EAAE,oDADhB;AAEEC,IAAAA,aAAa,EAAE,CACb;AAAEC,MAAAA,UAAU,EAAE,kEAAd;AAAkFC,MAAAA,OAAO,EAAE;AAA3F,KADa,EAEb;AAAED,MAAAA,UAAU,EAAE,mDAAd;AAAmEC,MAAAA,OAAO,EAAE;AAA5E,KAFa,EAGb;AAAEF,MAAAA,aAAa,EAAE,8DAAjB;AAAiFE,MAAAA,OAAO,EAAE;AAA1F,KAHa;AAFjB,GATgB,CAAlB;AAmBA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMa,uBAAuB,GAAIC,SAAD,IAAe;AAC7C,QAAIA,SAAJ,EAAe;AACbF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,UAAMI,YAAY,GAAGR,eAAe,GAAG,CAAvC;;AACA,QAAIQ,YAAY,GAAGb,SAAS,CAACc,MAA7B,EAAqC;AACnCR,MAAAA,kBAAkB,CAACO,YAAD,CAAlB;AACD,KAFD,MAEO;AACLL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGD,SAAS,gBACR;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gCACcE,KADd,cAC6BT,SAAS,CAACc,MADvC;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAKN;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAA,oCAAgBT,eAAe,GAAG,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OAC+CL,SAAS,CAACc,MADzD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAAgCd,SAAS,CAACK,eAAD,CAAT,CAA2BJ;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACGD,SAAS,CAACK,eAAD,CAAT,CAA2BH,aAA3B,CAAyCa,GAAzC,CAA8Cb,aAAD,IAAmB,CAEhE,CAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA5DuBH,G;;KAAAA,G","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n  const questions = [\n    {\n      questionText: 'When traveling, what type of restaurants do you like the best?',\n      answerOptions: [\n        { answerText: 'Have preparations done right from the start', isPoint: '10' },\n        { answerText: 'Have snacks carried along with you', isPoint: '4' },\n        { answerOptions: \"Have your food cooked by your own hands\", isPoint: '7' }\n      ]\n    },\n    {\n      questionText: 'How do you decide on your next travel destination?',\n      answerOptions: [\n        { answerText: 'Visit multiple websites and watch videos to know about the place', isPoint: '10' },\n        { answerText: 'Know about the place from your friends and family', isPoint: '4' },\n        { answerOptions: \"ry to pick a place as remote and close-to-nature as possible\", isPoint: '5' }\n      ],\n    },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n    <div className='app'>\n      {showScore ? (\n        <div className='score-section'>\n          You scored {score} out of {questions.length}\n        </div>\n      ) : (\n          <>\n            <div className='question-section'>\n              <div className='question-count'>\n                <span>Question {currentQuestion + 1}</span>/{questions.length}\n              </div>\n              <div className='question-text'>{questions[currentQuestion].questionText}</div>\n            </div>\n            <div className='answer-section'>\n              {questions[currentQuestion].answerOptions.map((answerOptions) => {\n\n              })}\n            </div>\n          </>\n        )}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}