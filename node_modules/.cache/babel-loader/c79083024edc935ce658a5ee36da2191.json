{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/exa00071/Documents/reehen.mehta/React/quiz-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function App() {\n  _s();\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [backColor, setbackColor] = useState(null);\n  const [questionData, setQuestionData] = useState([]);\n\n  const handleAnswerOptionClick = (isCorrect, i) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    setbackColor(i);\n  };\n\n  const moveNextQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n      setbackColor(null);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  useEffect(() => {\n    axios.get('https://e619b48d-d6c4-4a41-b538-7c52d533c7f5.mock.pstmn.io/server-demo').then(function (data) {\n      setQuestionData(data.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"userpoints\",\n          children: [\"You scored \", score, \" out of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz_header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz_user\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Welcome! \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: \"user_name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz_timer\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: \"00:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz_body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"questions\",\n              children: [\"Question \", currentQuestion + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), \"/\", questionData.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 108\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-text\",\n              children: questionData.length ? questionData[currentQuestion].questionText : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option_group\",\n            children: questionData[currentQuestion].answerOptions.map((answerOption, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                backgroundColor: backColor === i ? '#341f97' : '',\n                color: backColor === i ? '#fff' : ''\n              },\n              className: \"option\",\n              onClick: () => handleAnswerOptionClick(answerOption.isCorrect, i),\n              children: answerOption.answerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-next\",\n            onClick: () => moveNextQuestion(),\n            children: \"Next Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"n9G1PHQjUkca5utFKRL5yEdokNs=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/exa00071/Documents/reehen.mehta/React/quiz-app/src/App.js"],"names":["React","useState","useEffect","axios","App","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","backColor","setbackColor","questionData","setQuestionData","handleAnswerOptionClick","isCorrect","i","moveNextQuestion","nextQuestion","questions","length","get","then","data","questionText","answerOptions","map","answerOption","backgroundColor","color","answerText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function App() {\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [backColor, setbackColor] = useState(null);\n  const [questionData, setQuestionData] = useState([]);\n\n  const handleAnswerOptionClick = (isCorrect, i) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    setbackColor(i);\n  };\n\n  const moveNextQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n      setbackColor(null);\n    } else {\n      setShowScore(true);\n    }\n  }\n\n  useEffect(() => {\n    axios.get('https://e619b48d-d6c4-4a41-b538-7c52d533c7f5.mock.pstmn.io/server-demo').then(function (data) {\n      setQuestionData(data.data)\n    })\n  }, []);\n\n  return (\n    <div className='app'>\n      {showScore ? (\n        <div className='wrapper'>\n          <div>\n            <p className='userpoints'>You scored {score} out of {questions.length}</p>\n          </div>\n        </div>\n      ) : (\n          <div className='wrapper'>\n            <div className='quiz'>\n              <div className='quiz_header'>\n                <div className='quiz_user'>\n                  <h4>Welcome! <span className='name'>user_name</span></h4>\n                </div>\n                <div className='quiz_timer'>\n                  <span className='time'>00:00</span>\n                </div>\n              </div>\n\n              <div className='quiz_body'>\n                <h2><span className='questions'>Question {currentQuestion + 1}</span>/{questionData.length}<br></br>\n                  {/* <span className='question-text'>{questions[currentQuestion].questionText}</span> */}\n                  <span className='question-text'>{questionData.length ? questionData[currentQuestion].questionText : ''}</span>\n                </h2>\n                <div className='option_group'>\n                  {questionData[currentQuestion].answerOptions.map((answerOption, i) => (\n                    <button style={{ backgroundColor: backColor === i ? '#341f97' : '', color: backColor === i ? '#fff' : '' }} className='option' onClick={() => handleAnswerOptionClick(answerOption.isCorrect, i)}>{answerOption.answerText}</button>\n                  ))}\n                </div>\n                <button className=\"btn-next\" onClick={() => moveNextQuestion()}>Next Question</button>\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}