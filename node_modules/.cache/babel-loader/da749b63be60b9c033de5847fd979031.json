{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/exa00071/Documents/reehen.mehta/React/quiz-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport default function App() {\n  _s();\n\n  const questions = [{\n    questionText: 'When traveling, what type of restaurants do you like the best?',\n    answerOptions: [{\n      answerText: 'Have preparations done right from the start',\n      isCorrect: '1.0'\n    }, {\n      answerText: 'Have snacks carried along with you',\n      isCorrect: '0.4'\n    }, {\n      answerText: \"Have your food cooked by your own hands\",\n      isCorrect: '0.7'\n    }, {\n      answerText: \"Have your food at any nearby food station\",\n      isCorrect: '0.1'\n    }, {\n      answerText: \"Have a journey especially for trying new taste\",\n      isCorrect: '0.3'\n    }, {\n      answerText: \"Have an experience on food and advise others\",\n      isCorrect: '0.2'\n    }, {\n      answerText: \"Have to take somebody else's advice for food\",\n      isCorrect: '0.1'\n    }]\n  }, {\n    questionText: 'How do you decide on your next travel destination?',\n    answerOptions: [{\n      answerText: \"Visit multiple websites and watch videos to know about the place\",\n      isCorrect: '1.0'\n    }, {\n      answerText: \"Know about the place from your friends and family\",\n      isCorrect: '1.0'\n    }, {\n      answerText: \"Try to pick a place as remote and close-to-nature as possible\",\n      isCorrect: '1.0'\n    }, {\n      answerText: \"Have equal preference for concrete and natural jungles\",\n      isCorrect: '1.0'\n    }, {\n      answerText: \"Try to visit places you have never been to before\",\n      isCorrect: '1.0'\n    }, {\n      answerText: \"Try to visit places you have been to know them better\",\n      isCorrect: '1.0'\n    }, {\n      answerText: \"Follow the directions of your fellow tour leader\",\n      isCorrect: '1.0'\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    console.log('Button Clicked');\n  };\n\n  const moveNextQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  }; // const toggleActvie = () => {\n  //   let option = document.querySelectorAll(\"button.option\");\n  //   for (let i = 0; i < option.length; i++) {\n  //     console.log('Button Clicked');\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"userpoints\",\n          children: [\"You scored \", score, \" out of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz_header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz_user\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Welcome! \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: \"user_name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz_timer\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: \"00:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz_body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"questions\",\n              children: [\"Question \", currentQuestion + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), \"/\", questions.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 105\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-text\",\n              children: questions[currentQuestion].questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option_group\",\n            children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"option\",\n              onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n              children: answerOption.answerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-next\",\n            onClick: () => moveNextQuestion(),\n            children: \"Next Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/exa00071/Documents/reehen.mehta/React/quiz-app/src/App.js"],"names":["React","useState","App","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","console","log","moveNextQuestion","nextQuestion","length","map","answerOption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n\n  const questions = [\n    {\n      questionText: 'When traveling, what type of restaurants do you like the best?',\n      answerOptions: [\n        { answerText: 'Have preparations done right from the start', isCorrect: '1.0' },\n        { answerText: 'Have snacks carried along with you', isCorrect: '0.4' },\n        { answerText: \"Have your food cooked by your own hands\", isCorrect: '0.7' },\n        { answerText: \"Have your food at any nearby food station\", isCorrect: '0.1' },\n        { answerText: \"Have a journey especially for trying new taste\", isCorrect: '0.3' },\n        { answerText: \"Have an experience on food and advise others\", isCorrect: '0.2' },\n        { answerText: \"Have to take somebody else's advice for food\", isCorrect: '0.1' }\n      ]\n    },\n    {\n      questionText: 'How do you decide on your next travel destination?',\n      answerOptions: [\n        { answerText: \"Visit multiple websites and watch videos to know about the place\", isCorrect: '1.0' },\n        { answerText: \"Know about the place from your friends and family\", isCorrect: '1.0' },\n        { answerText: \"Try to pick a place as remote and close-to-nature as possible\", isCorrect: '1.0' },\n        { answerText: \"Have equal preference for concrete and natural jungles\", isCorrect: '1.0' },\n        { answerText: \"Try to visit places you have never been to before\", isCorrect: '1.0' },\n        { answerText: \"Try to visit places you have been to know them better\", isCorrect: '1.0' },\n        { answerText: \"Follow the directions of your fellow tour leader\", isCorrect: '1.0' }\n      ],\n    },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    console.log('Button Clicked');\n  };\n\n  const moveNextQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  }\n\n  // const toggleActvie = () => {\n  //   let option = document.querySelectorAll(\"button.option\");\n  //   for (let i = 0; i < option.length; i++) {\n  //     console.log('Button Clicked');\n  //   }\n  // }\n\n  return (\n    <div className='app'>\n      {showScore ? (\n        <div className='wrapper'>\n          <div>\n            <p className='userpoints'>You scored {score} out of {questions.length}</p>\n          </div>\n        </div>\n      ) : (\n          <div className='wrapper'>\n            <div className='quiz'>\n              <div className='quiz_header'>\n                <div className='quiz_user'>\n                  <h4>Welcome! <span className='name'>user_name</span></h4>\n                </div>\n                <div className='quiz_timer'>\n                  <span className='time'>00:00</span>\n                </div>\n              </div>\n\n              <div className='quiz_body'>\n                <h2><span className='questions'>Question {currentQuestion + 1}</span>/{questions.length}<br></br>\n                  <span className='question-text'>{questions[currentQuestion].questionText}</span>\n                </h2>\n                <div className='option_group'>\n                  {questions[currentQuestion].answerOptions.map((answerOption) => (\n                    <button className='option' onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n                  ))}\n                </div>\n                <button className=\"btn-next\" onClick={() => moveNextQuestion()}>Next Question</button>\n              </div>\n            </div>\n          </div>\n        )}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}